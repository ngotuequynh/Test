{"version":3,"file":"ace_inline_code.min.js","sources":["../src/ace_inline_code.js"],"sourcesContent":["/**\n * This file is part of Moodle - http:moodle.org/\n *\n * Moodle is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Moodle is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Moodle.  If not, see <http:www.gnu.org/licenses/>.\n */\n\n/**\n * JavaScript for implementing all the features.\n *\n * @module     filter_ace_inline/ace_inline_code\n * @copyright  Richard Lobb, Michelle Hsieh 2022\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {applyAceAndBuildUi} from \"filter_ace_inline/local/apply_ace_editor\";\n\n/**\n * Applies ace interactive code precisely once per page.\n * @param {array} config Config settings for dark-mode and buttons.\n */\nexport const initAceInteractive = async(config) => {\n    if (!globalThis.aceInlineCodeInteractiveDone) { // Do it once only.\n        globalThis.aceInlineCodeInteractiveDone = true;\n        while (!globalThis.ace) {\n            await new Promise(resolve => setTimeout(resolve, 1000));\n        }\n        applyAceAndBuildUi(document, true, config);\n        // Add a hook for use by dynamically generated content.\n        globalThis.applyAceInteractive = function() {\n            applyAceAndBuildUi(document, true, config);\n        };\n    }\n};\n\n/**\n * Applies ace highlight code precisely once per page.\n * @param {array} config Config settings for dark-mode.\n */\nexport const initAceHighlighting = async(config) => {\n    if (!globalThis.aceInlineCodeHighlightingDone) { // Do it once only.\n        globalThis.aceInlineCodeHighlightingDone = true;\n        while (!globalThis.ace) {\n            await new Promise(resolve => setTimeout(resolve, 1000));\n        }\n        applyAceAndBuildUi(document, false, config);\n        // Add a hook for use by dynamically generated content.\n        globalThis.applyAceHighlighting = function() {\n            applyAceAndBuildUi(document, false, config);\n        };\n    }\n};\n"],"names":["async","globalThis","aceInlineCodeInteractiveDone","ace","Promise","resolve","setTimeout","document","config","applyAceInteractive","aceInlineCodeHighlightingDone","applyAceHighlighting"],"mappings":"4RA+BkCA,MAAAA,aACzBC,WAAWC,6BAA8B,KAC1CD,WAAWC,8BAA+B,GAClCD,WAAWE,WACT,IAAIC,SAAQC,SAAWC,WAAWD,QAAS,gDAElCE,UAAU,EAAMC,QAEnCP,WAAWQ,oBAAsB,oDACVF,UAAU,EAAMC,wCASZR,MAAAA,aAC1BC,WAAWS,8BAA+B,KAC3CT,WAAWS,+BAAgC,GACnCT,WAAWE,WACT,IAAIC,SAAQC,SAAWC,WAAWD,QAAS,gDAElCE,UAAU,EAAOC,QAEpCP,WAAWU,qBAAuB,oDACXJ,UAAU,EAAOC"}