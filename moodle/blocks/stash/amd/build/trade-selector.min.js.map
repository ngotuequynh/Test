{"version":3,"file":"trade-selector.min.js","sources":["../src/trade-selector.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Add items to a trade table.\n *\n * @copyright 2023 Adrian Greeve <adriangreeve.com>\n * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\nimport {get_string as getString} from 'core/str';\nimport Templates from 'core/templates';\nimport Ajax from 'core/ajax';\n\nconst showModal = async(e) => {\n    let node = e.currentTarget;\n    let type = node.dataset.type;\n    const modal = await buildModal(type);\n    displayModal(modal, type);\n};\n\nconst buildModal = async(tradetype) => {\n    let courseelement = document.querySelector('input[name=\"courseid\"]');\n    let courseid = courseelement.value;\n    let context = await getItems(courseid);\n    context.type = tradetype;\n    return ModalFactory.create({\n        title: getString('addnewtradeitem', 'block_stash'),\n        body: Templates.render('block_stash/trade_item_picker', context),\n        type: ModalFactory.types.SAVE_CANCEL\n    });\n};\n\nconst displayModal = async(modal, type) => {\n    let savetext = getString('additem', 'block_stash');\n    modal.setSaveButtonText(savetext);\n    modal.getRoot().on(ModalEvents.save, () => {\n        let itemnode = document.querySelector('#block-stash-item-select option:checked');\n        let itemamount = document.getElementById('amount').value;\n        itemamount = parseInt(itemamount);\n        if (!Number.isInteger(itemamount) || itemamount <= 0) {\n            itemamount = 1;\n        }\n\n        let data = {\n            itemid: itemnode.value,\n            imageurl: itemnode.dataset.imgurl,\n            name: itemnode.innerText,\n            quantity: itemamount\n        };\n\n        let templatename = (type === 'gain') ? 'block_stash/trade_add_item_detail' : 'block_stash/trade_loss_item_detail';\n        Templates.render(templatename, data).done((html, js) => {\n            let itemsbox = document.querySelector('.block_stash_item_box[data-type=\"' + type + '\"]');\n            Templates.appendNodeContents(itemsbox, html, js);\n            registerActions();\n        });\n\n        modal.destroy();\n\n    });\n\n    modal.getRoot().on(ModalEvents.hidden, () => {\n        modal.destroy();\n    });\n\n    modal.show();\n};\n\nconst getItems = (courseid) => Ajax.call([{\n    methodname: 'block_stash_get_items',\n    args: {courseid: courseid}\n}])[0];\n\nconst registerActions = () => {\n    let deleteelements = document.getElementsByClassName('block-stash-delete-item');\n    for (let delement of deleteelements) {\n        delement.addEventListener('click', deleteItem);\n    }\n};\n\nconst deleteItem = (element) => {\n    let child = element.currentTarget;\n    let parent = child.closest('.block-stash-trade-item');\n    parent.remove();\n    element.preventDefault();\n};\n\nexport const init = () => {\n    registerActions();\n    let additemelements = document.getElementsByClassName('additem');\n    for (let additem of additemelements) {\n        additem.addEventListener('click', showModal);\n    }\n};\n"],"names":["showModal","async","type","e","currentTarget","dataset","modal","buildModal","displayModal","courseid","document","querySelector","value","context","getItems","tradetype","ModalFactory","create","title","body","Templates","render","types","SAVE_CANCEL","savetext","setSaveButtonText","getRoot","on","ModalEvents","save","itemnode","itemamount","getElementById","parseInt","Number","isInteger","data","itemid","imageurl","imgurl","name","innerText","quantity","templatename","done","html","js","itemsbox","appendNodeContents","registerActions","destroy","hidden","show","Ajax","call","methodname","args","deleteelements","getElementsByClassName","delement","addEventListener","deleteItem","element","closest","remove","preventDefault","additemelements","additem"],"mappings":";;;;;;oRA4BMA,UAAYC,MAAAA,QAEVC,KADOC,EAAEC,cACGC,QAAQH,WAClBI,YAAcC,WAAWL,MAC/BM,aAAaF,MAAOJ,OAGlBK,WAAaN,MAAAA,gBAEXQ,SADgBC,SAASC,cAAc,0BACdC,MACzBC,cAAgBC,SAASL,iBAC7BI,QAAQX,KAAOa,UACRC,uBAAaC,OAAO,CACvBC,OAAO,mBAAU,kBAAmB,eACpCC,KAAMC,mBAAUC,OAAO,gCAAiCR,SACxDX,KAAMc,uBAAaM,MAAMC,eAI3Bf,aAAeP,MAAMK,MAAOJ,YAC1BsB,UAAW,mBAAU,UAAW,eACpClB,MAAMmB,kBAAkBD,UACxBlB,MAAMoB,UAAUC,GAAGC,sBAAYC,MAAM,SAC7BC,SAAWpB,SAASC,cAAc,2CAClCoB,WAAarB,SAASsB,eAAe,UAAUpB,MACnDmB,WAAaE,SAASF,cACjBG,OAAOC,UAAUJ,aAAeA,YAAc,KAC/CA,WAAa,OAGbK,KAAO,CACPC,OAAQP,SAASlB,MACjB0B,SAAUR,SAASzB,QAAQkC,OAC3BC,KAAMV,SAASW,UACfC,SAAUX,YAGVY,aAAyB,SAATzC,KAAmB,oCAAsC,wDACnEmB,OAAOsB,aAAcP,MAAMQ,MAAK,CAACC,KAAMC,UACzCC,SAAWrC,SAASC,cAAc,oCAAsCT,KAAO,yBACzE8C,mBAAmBD,SAAUF,KAAMC,IAC7CG,qBAGJ3C,MAAM4C,aAIV5C,MAAMoB,UAAUC,GAAGC,sBAAYuB,QAAQ,KACnC7C,MAAM4C,aAGV5C,MAAM8C,QAGJtC,SAAYL,UAAa4C,cAAKC,KAAK,CAAC,CACtCC,WAAY,wBACZC,KAAM,CAAC/C,SAAUA,aACjB,GAEEwC,gBAAkB,SAChBQ,eAAiB/C,SAASgD,uBAAuB,+BAChD,IAAIC,YAAYF,eACjBE,SAASC,iBAAiB,QAASC,aAIrCA,WAAcC,UACJA,QAAQ1D,cACD2D,QAAQ,2BACpBC,SACPF,QAAQG,gCAGQ,KAChBhB,sBACIiB,gBAAkBxD,SAASgD,uBAAuB,eACjD,IAAIS,WAAWD,gBAChBC,QAAQP,iBAAiB,QAAS5D"}