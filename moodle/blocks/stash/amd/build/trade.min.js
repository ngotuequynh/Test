/**
 * Trade module.
 *
 * @copyright  2017 Adrian Greeve - adriangreeve.com
 * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
 */
define("block_stash/trade",["jquery","core/ajax","core/log","block_stash/base","block_stash/item","block_stash/user-item","core/pubsub"],(function($,Ajax,Log,Base,Item,UserItem,PubSub){function Trade(tradedata){Base.prototype.constructor.apply(this,[tradedata])}return Trade.prototype=Object.create(Base.prototype),Trade.prototype.EVENT_TRADE="trade:pickedup",Trade.prototype.do=function(){return Ajax.call([{methodname:"block_stash_complete_trade",args:{tradeid:this.get("id"),hashcode:this.get("hashcode")}}])[0].fail((function(){Log.debug("The trade could not be completed.")})).then(function(data){if(data){for(var index in data.gaineditems){var userItem=new UserItem(data.gaineditems[index].useritem,new Item(data.gaineditems[index].item));PubSub.publish(this.EVENT_TRADE,{id:this.get("id"),hashcode:this.get("hashcode"),useritem:userItem})}for(var index in data.removeditems){userItem=new UserItem(data.removeditems[index].useritem,new Item(data.removeditems[index].item));PubSub.publish(this.EVENT_TRADE,{id:this.get("id"),hashcode:this.get("hashcode"),useritem:userItem})}}}.bind(this))},Trade}));

//# sourceMappingURL=trade.min.js.map