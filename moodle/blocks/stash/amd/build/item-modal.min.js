define("block_stash/item-modal",["exports","core/modal_factory","core/modal_events","block_stash/item","core/templates"],(function(_exports,_modal_factory,_modal_events,_item,_templates){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}
/**
   * Popup for the items in the stash block.
   *
   * @copyright  2023 Adrian Greeve <adriangreeve.com>
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0,_modal_factory=_interopRequireDefault(_modal_factory),_modal_events=_interopRequireDefault(_modal_events),_item=_interopRequireDefault(_item),_templates=_interopRequireDefault(_templates);const buildModal=async itemId=>{let context=(await _item.default.getItem(itemId)).getData();return _modal_factory.default.create({title:context.name,body:_templates.default.render("block_stash/item_detail",context),type:_modal_factory.default.types.CANCEL})},displayModal=async modal=>{modal.getRoot().on(_modal_events.default.hidden,(()=>{modal.destroy()})),modal.show()};_exports.init=itemId=>{(async itemId=>{const modal=await buildModal(itemId);displayModal(modal)})(itemId)}}));

//# sourceMappingURL=item-modal.min.js.map