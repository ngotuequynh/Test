{"version":3,"file":"stash-area.min.js","sources":["../src/stash-area.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Stash module.\n *\n * @copyright  2016 Frédéric Massart - FMCorz.net\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine([\n    'jquery',\n    'core/templates',\n    'block_stash/item-modal',\n    'block_stash/drop',\n    'block_stash/trade',\n    'core/pubsub'\n], function($, Templates, ItemModal, Drop, Trade, PubSub) {\n\n    /**\n     * Stash class.\n     *\n     * @class\n     * @param {Node} node The node.\n     */\n    function StashArea(node) {\n        this._node = $(node);\n        this._setUp();\n    }\n    StashArea.prototype._node = null;\n    StashArea.prototype._userItemTemplate = 'block_stash/user_item';\n\n    StashArea.prototype._setUp = function() {\n        PubSub.subscribe('block_stash/drop/pickedup', this._dropPickedUpListener.bind(this));\n        PubSub.subscribe('trade:pickedup', this._dropPickedUpListener.bind(this));\n\n        this._setUpUserItemAreClickable();\n    };\n\n    /**\n     * Add a user item to the stash.\n     *\n     * @param {UserItem} userItem The user item.\n     * @return {Promise}\n     */\n    StashArea.prototype.addUserItem = function(userItem) {\n        return this._renderUserItem(userItem).then(function(html, js) {\n            var node = $(html),\n                container = this._node.find('.item-list');\n            node.data('useritem', userItem);\n            this._makeUserItemNodeClickable(node);\n            container.append(' ');  // A hacky separator to replicate natural rendering.\n            container.append(node);\n            Templates.runTemplateJS(js);\n        }.bind(this));\n    };\n\n    /**\n     * Whether the item is in the stash.\n     *\n     * @param {Number} id The item ID.\n     * @return {Boolean}\n     */\n    StashArea.prototype.containsItem = function(id) {\n        return this.getUserItemNode(id).length > 0;\n    };\n\n    /**\n     * Listens to drop picked up events.\n     *\n     * @param {Event} e The event.\n     */\n    StashArea.prototype._dropPickedUpListener = function(e) {\n        var userItem = e.useritem;\n        if (this.containsItem(userItem.getItem().get('id'))) {\n            this.updateUserItemQuantity(userItem);\n        } else {\n            this.addUserItem(userItem).then(function() {\n                this._node.find('.empty-content').remove();\n            }.bind(this));\n        }\n    };\n\n    /**\n     * Get the user item node.\n     *\n     * @param {Number} id The item ID.\n     * @return {Node}\n     */\n    StashArea.prototype.getUserItemNode = function(id) {\n        return this._node.find('.block-stash-item[data-id=' + id + ']');\n    };\n\n    /**\n     * Make a user item node clickable.\n     *\n     * @param {Node} node The node.\n     */\n    StashArea.prototype._makeUserItemNodeClickable = function(node) {\n        node.attr('tabindex', 0);\n        node.attr('role', 'button');\n        node.attr('aria-haspopup', 'true');\n    };\n\n    /**\n     * Render a user item.\n     *\n     * @param {UserItem} userItem The user item.\n     * @return {Promise}\n     */\n    StashArea.prototype._renderUserItem = function(userItem) {\n        return Templates.render(this._userItemTemplate, {\n            item: userItem.getItem().getData(),\n            useritem: userItem.getData(),\n        });\n    };\n\n    /**\n     * Set-up process to handle items being clickable.\n     */\n    StashArea.prototype._setUpUserItemAreClickable = function() {\n        // Make all items as clickable.\n        this._node.find('.item-list .block-stash-item').each(function(i, node) {\n            this._makeUserItemNodeClickable($(node));\n        }.bind(this));\n\n        // Delegate event.\n        var handler = function(e) {\n            var node = $(e.currentTarget),\n                itemId = node.data('id');\n\n            if (!itemId) {\n                return;\n            }\n\n            ItemModal.init(itemId);\n            e.preventDefault();\n        };\n        var selector = '.block-stash-item[aria-haspopup=\"true\"]';\n        this._node.find('.item-list').delegate(selector, 'click', handler);\n        this._node.find('.item-list').delegate(selector, 'keydown', function(e) {\n            if (e.keyCode != 13 && e.keyCode != 32) {\n                return;\n            }\n            handler(e);\n        });\n    };\n\n    /**\n     * Update the quantity of a user item.\n     *\n     * @param {UserItem} userItem The user item.\n     */\n    StashArea.prototype.updateUserItemQuantity = function(userItem) {\n        var node = this.getUserItemNode(userItem.getItem().get('id')),\n            quantityNode = node.find('.item-quantity'),\n            newQuantity = userItem.get('quantity'),\n            quantity = parseInt(quantityNode.text(), 10);\n\n        quantityNode.text(newQuantity);\n        node.removeClass('item-quantity-' + quantity);\n        node.addClass('item-quantity-' + newQuantity);\n    };\n\n    return /** @alias module:block_stash/stash */ StashArea;\n\n});\n"],"names":["define","$","Templates","ItemModal","Drop","Trade","PubSub","StashArea","node","_node","_setUp","prototype","_userItemTemplate","subscribe","this","_dropPickedUpListener","bind","_setUpUserItemAreClickable","addUserItem","userItem","_renderUserItem","then","html","js","container","find","data","_makeUserItemNodeClickable","append","runTemplateJS","containsItem","id","getUserItemNode","length","e","useritem","getItem","get","updateUserItemQuantity","remove","attr","render","item","getData","each","i","handler","itemId","currentTarget","init","preventDefault","selector","delegate","keyCode","quantityNode","newQuantity","quantity","parseInt","text","removeClass","addClass"],"mappings":";;;;;;AAsBAA,gCAAO,CACH,SACA,iBACA,yBACA,mBACA,oBACA,gBACD,SAASC,EAAGC,UAAWC,UAAWC,KAAMC,MAAOC,iBAQrCC,UAAUC,WACVC,MAAQR,EAAEO,WACVE,gBAETH,UAAUI,UAAUF,MAAQ,KAC5BF,UAAUI,UAAUC,kBAAoB,wBAExCL,UAAUI,UAAUD,OAAS,WACzBJ,OAAOO,UAAU,4BAA6BC,KAAKC,sBAAsBC,KAAKF,OAC9ER,OAAOO,UAAU,iBAAkBC,KAAKC,sBAAsBC,KAAKF,YAE9DG,8BASTV,UAAUI,UAAUO,YAAc,SAASC,iBAChCL,KAAKM,gBAAgBD,UAAUE,KAAK,SAASC,KAAMC,QAClDf,KAAOP,EAAEqB,MACTE,UAAYV,KAAKL,MAAMgB,KAAK,cAChCjB,KAAKkB,KAAK,WAAYP,eACjBQ,2BAA2BnB,MAChCgB,UAAUI,OAAO,KACjBJ,UAAUI,OAAOpB,MACjBN,UAAU2B,cAAcN,KAC1BP,KAAKF,QASXP,UAAUI,UAAUmB,aAAe,SAASC,WACjCjB,KAAKkB,gBAAgBD,IAAIE,OAAS,GAQ7C1B,UAAUI,UAAUI,sBAAwB,SAASmB,OAC7Cf,SAAWe,EAAEC,SACbrB,KAAKgB,aAAaX,SAASiB,UAAUC,IAAI,YACpCC,uBAAuBnB,eAEvBD,YAAYC,UAAUE,KAAK,gBACvBZ,MAAMgB,KAAK,kBAAkBc,UACpCvB,KAAKF,QAUfP,UAAUI,UAAUqB,gBAAkB,SAASD,WACpCjB,KAAKL,MAAMgB,KAAK,6BAA+BM,GAAK,MAQ/DxB,UAAUI,UAAUgB,2BAA6B,SAASnB,MACtDA,KAAKgC,KAAK,WAAY,GACtBhC,KAAKgC,KAAK,OAAQ,UAClBhC,KAAKgC,KAAK,gBAAiB,SAS/BjC,UAAUI,UAAUS,gBAAkB,SAASD,iBACpCjB,UAAUuC,OAAO3B,KAAKF,kBAAmB,CAC5C8B,KAAMvB,SAASiB,UAAUO,UACzBR,SAAUhB,SAASwB,aAO3BpC,UAAUI,UAAUM,2BAA6B,gBAExCR,MAAMgB,KAAK,gCAAgCmB,KAAK,SAASC,EAAGrC,WACxDmB,2BAA2B1B,EAAEO,QACpCQ,KAAKF,WAGHgC,QAAU,SAASZ,OAEfa,OADO9C,EAAEiC,EAAEc,eACGtB,KAAK,MAElBqB,SAIL5C,UAAU8C,KAAKF,QACfb,EAAEgB,mBAEFC,SAAW,+CACV1C,MAAMgB,KAAK,cAAc2B,SAASD,SAAU,QAASL,cACrDrC,MAAMgB,KAAK,cAAc2B,SAASD,SAAU,WAAW,SAASjB,GAChD,IAAbA,EAAEmB,SAA8B,IAAbnB,EAAEmB,SAGzBP,QAAQZ,OAShB3B,UAAUI,UAAU2B,uBAAyB,SAASnB,cAC9CX,KAAOM,KAAKkB,gBAAgBb,SAASiB,UAAUC,IAAI,OACnDiB,aAAe9C,KAAKiB,KAAK,kBACzB8B,YAAcpC,SAASkB,IAAI,YAC3BmB,SAAWC,SAASH,aAAaI,OAAQ,IAE7CJ,aAAaI,KAAKH,aAClB/C,KAAKmD,YAAY,iBAAmBH,UACpChD,KAAKoD,SAAS,iBAAmBL,cAGShD"}